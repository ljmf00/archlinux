name: cron-checks

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    # Every day
    - cron:  '0 0 * * *'
  workflow_dispatch:

env:
  DOCKER_BUILDKIT: '1'

jobs:
  codacy-security-scan:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout code
        uses: actions/checkout@v3

      # Execute Codacy Analysis CLI and generate a SARIF output with the security issues identified during the analysis
      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@v4.3.0
        with:
          # Check https://github.com/codacy/codacy-analysis-cli#project-token to get your project token from your Codacy repository
          # You can also omit the token and run the tools that support default configurations
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          verbose: true
          output: results.sarif
          format: sarif
          # Adjust severity of non-security issues
          gh-code-scanning-compat: true
          # Force 0 exit code to allow SARIF file generation
          # This will handover control about PR rejection to the GitHub side
          max-allowed-issues: 2147483647

      # Upload the SARIF file generated in the previous step
      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
  anchore-build-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.5.0
        with:
          version: 'latest'
          buildkitd-flags: --debug
          driver-opts: |
            network=host
            image=moby/buildkit:latest
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ljmf00/archlinux:latest
      - name: Run the Anchore scan action itself with GitHub Advanced Security code scanning integration enabled
        uses: anchore/scan-action@v3.3.5
        with:
          image: "ljmf00/archlinux:latest"
          acs-report-enable: true
      - name: Upload Anchore Scan Report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
